#BlueJ class context
comment0.params=we
comment0.target=void\ windowClosing(java.awt.event.WindowEvent)
comment1.params=visible
comment1.target=void\ setVisible(boolean)
comment1.text=\n\ Set\ the\ canvas\ visibility\ and\ brings\ canvas\ to\ the\ front\ of\ screen\n\ when\ made\ visible.\ This\ method\ can\ also\ be\ used\ to\ bring\ an\ already\n\ visible\ canvas\ to\ the\ front\ of\ other\ windows.\n\ @param\ visible\ \ boolean\ value\ representing\ the\ desired\ visibility\ of\n\ the\ canvas\ (true\ or\ false)\n
comment10.params=x1\ y1\ x2\ y2
comment10.target=void\ drawLine(int,\ int,\ int,\ int)
comment10.text=\n\ Draws\ a\ line\ on\ the\ Canvas.\n\ @param\ \ x1\ \ \ x\ co-ordinate\ of\ start\ of\ line\n\ @param\ \ y1\ \ \ y\ co-ordinate\ of\ start\ of\ line\n\ @param\ \ x2\ \ \ x\ co-ordinate\ of\ end\ of\ line\n\ @param\ \ y2\ \ \ y\ co-ordinate\ of\ end\ of\ line\n
comment11.params=newColour
comment11.target=void\ setForegroundColour(java.awt.Color)
comment11.text=\n\ Sets\ the\ foreground\ colour\ of\ the\ Canvas.\n\ @param\ \ newColour\ \ \ the\ new\ colour\ for\ the\ foreground\ of\ the\ Canvas\n
comment12.params=
comment12.target=java.awt.Color\ getForegroundColour()
comment12.text=\n\ Returns\ the\ current\ colour\ of\ the\ foreground.\n\ @return\ \ \ the\ colour\ of\ the\ foreground\ of\ the\ Canvas\n
comment13.params=newColour
comment13.target=void\ setBackgroundColour(java.awt.Color)
comment13.text=\n\ Sets\ the\ background\ colour\ of\ the\ Canvas.\n\ @param\ \ newColour\ \ \ the\ new\ colour\ for\ the\ background\ of\ the\ Canvas\n
comment14.params=newFont
comment14.target=void\ setFont(java.awt.Font)
comment14.text=\n\ changes\ the\ current\ Font\ used\ on\ the\ Canvas\n\ @param\ \ newFont\ \ \ new\ font\ to\ be\ used\ for\ String\ output\n
comment2.params=shape
comment2.target=void\ draw(java.awt.Shape)
comment2.text=\n\ Draw\ a\ given\ shape\ onto\ the\ canvas.\n\ @param\ \ shape\ \ the\ shape\ object\ to\ be\ drawn\ on\ the\ canvas\n
comment3.params=shape
comment3.target=void\ fill(java.awt.Shape)
comment3.text=\n\ Fill\ the\ internal\ dimensions\ of\ a\ given\ shape\ with\ the\ current\n\ foreground\ colour\ of\ the\ canvas.\n\ @param\ \ shape\ \ the\ shape\ object\ to\ be\ filled\n
comment4.params=
comment4.target=void\ erase()
comment4.text=\n\ Erase\ the\ whole\ canvas.\n
comment5.params=shape
comment5.target=void\ erase(java.awt.Shape)
comment5.text=\n\ Erase\ a\ given\ shape's\ interior\ on\ the\ screen.\n\ @param\ \ shape\ \ the\ shape\ object\ to\ be\ erased\n
comment6.params=shape
comment6.target=void\ eraseOutline(java.awt.Shape)
comment6.text=\n\ Erases\ a\ given\ shape's\ outline\ on\ the\ screen.\n\ @param\ \ shape\ \ the\ shape\ object\ to\ be\ erased\n
comment7.params=image\ x\ y
comment7.target=boolean\ drawImage(java.awt.Image,\ int,\ int)
comment7.text=\n\ Draws\ an\ image\ onto\ the\ canvas.\n\ @param\ \ image\ \ \ the\ Image\ object\ to\ be\ displayed\n\ @param\ \ x\ \ \ \ \ \ \ x\ co-ordinate\ for\ Image\ placement\n\ @param\ \ y\ \ \ \ \ \ \ y\ co-ordinate\ for\ Image\ placement\n\ @return\ \ returns\ boolean\ value\ representing\ whether\ the\ image\ was\n\ \ \ \ \ \ \ \ \ \ completely\ loaded\n
comment8.params=text\ x\ y
comment8.target=void\ drawString(java.lang.String,\ int,\ int)
comment8.text=\n\ Draws\ a\ String\ on\ the\ Canvas.\n\ @param\ \ text\ \ \ the\ String\ to\ be\ displayed\n\ @param\ \ x\ \ \ \ \ \ x\ co-ordinate\ for\ text\ placement\n\ @param\ \ y\ \ \ \ \ \ y\ co-ordinate\ for\ text\ placement\n
comment9.params=text\ x\ y
comment9.target=void\ eraseString(java.lang.String,\ int,\ int)
comment9.text=\n\ Erases\ a\ String\ on\ the\ Canvas.\n\ @param\ \ text\ \ \ \ \ the\ String\ to\ be\ displayed\n\ @param\ \ x\ \ \ \ \ \ \ \ x\ co-ordinate\ for\ text\ placement\n\ @param\ \ y\ \ \ \ \ \ \ \ y\ co-ordinate\ for\ text\ placement\n
numComments=15
